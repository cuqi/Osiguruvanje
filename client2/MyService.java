
package client2;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MyService", targetNamespace = "http://myservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MyService {


    /**
     * 
     * @param password2
     * @param password1
     * @param email
     * @param username
     * @return
     *     returns java.lang.String
     * @throws NoSuchAlgorithmException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://myservice/", className = "client2.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://myservice/", className = "client2.RegisterResponse")
    @Action(input = "http://myservice/MyService/registerRequest", output = "http://myservice/MyService/registerResponse", fault = {
        @FaultAction(className = NoSuchAlgorithmException_Exception.class, value = "http://myservice/MyService/register/Fault/NoSuchAlgorithmException")
    })
    public String register(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password1", targetNamespace = "")
        String password1,
        @WebParam(name = "password2", targetNamespace = "")
        String password2,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws NoSuchAlgorithmException_Exception
    ;

    /**
     * 
     * @param password2
     * @param password1
     * @param username
     * @return
     *     returns java.lang.String
     * @throws NoSuchAlgorithmException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unregister", targetNamespace = "http://myservice/", className = "client2.Unregister")
    @ResponseWrapper(localName = "unregisterResponse", targetNamespace = "http://myservice/", className = "client2.UnregisterResponse")
    @Action(input = "http://myservice/MyService/unregisterRequest", output = "http://myservice/MyService/unregisterResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://myservice/MyService/unregister/Fault/IOException"),
        @FaultAction(className = NoSuchAlgorithmException_Exception.class, value = "http://myservice/MyService/unregister/Fault/NoSuchAlgorithmException")
    })
    public String unregister(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password1", targetNamespace = "")
        String password1,
        @WebParam(name = "password2", targetNamespace = "")
        String password2)
        throws IOException_Exception, NoSuchAlgorithmException_Exception
    ;

    /**
     * 
     * @param sessionID
     * @param householdInfo
     * @return
     *     returns client2.QuotationResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHouseholdQuotation", targetNamespace = "http://myservice/", className = "client2.GetHouseholdQuotation")
    @ResponseWrapper(localName = "getHouseholdQuotationResponse", targetNamespace = "http://myservice/", className = "client2.GetHouseholdQuotationResponse")
    @Action(input = "http://myservice/MyService/getHouseholdQuotationRequest", output = "http://myservice/MyService/getHouseholdQuotationResponse")
    public QuotationResponse getHouseholdQuotation(
        @WebParam(name = "HouseholdInfo", targetNamespace = "")
        HouseholdInfo householdInfo,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

    /**
     * 
     * @param insured
     * @param sessionID
     * @param householdInfo
     * @return
     *     returns client2.BookResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookHouseholdPolicy", targetNamespace = "http://myservice/", className = "client2.BookHouseholdPolicy")
    @ResponseWrapper(localName = "bookHouseholdPolicyResponse", targetNamespace = "http://myservice/", className = "client2.BookHouseholdPolicyResponse")
    @Action(input = "http://myservice/MyService/bookHouseholdPolicyRequest", output = "http://myservice/MyService/bookHouseholdPolicyResponse")
    public BookResponse bookHouseholdPolicy(
        @WebParam(name = "HouseholdInfo", targetNamespace = "")
        HouseholdInfo householdInfo,
        @WebParam(name = "Insured", targetNamespace = "")
        InsuredInfo insured,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

    /**
     * 
     * @param policyID
     * @param creditCardInfo
     * @param sessionID
     * @return
     *     returns client2.ConfirmResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "confirmPolicy", targetNamespace = "http://myservice/", className = "client2.ConfirmPolicy")
    @ResponseWrapper(localName = "confirmPolicyResponse", targetNamespace = "http://myservice/", className = "client2.ConfirmPolicyResponse")
    @Action(input = "http://myservice/MyService/confirmPolicyRequest", output = "http://myservice/MyService/confirmPolicyResponse")
    public ConfirmResponse confirmPolicy(
        @WebParam(name = "policyID", targetNamespace = "")
        String policyID,
        @WebParam(name = "creditCardInfo", targetNamespace = "")
        CreditCardInfo creditCardInfo,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

    /**
     * 
     * @param eur
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "converter", targetNamespace = "http://myservice/", className = "client2.Converter")
    @ResponseWrapper(localName = "converterResponse", targetNamespace = "http://myservice/", className = "client2.ConverterResponse")
    @Action(input = "http://myservice/MyService/converterRequest", output = "http://myservice/MyService/converterResponse")
    public double converter(
        @WebParam(name = "EUR", targetNamespace = "")
        String eur);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns java.lang.String
     * @throws NoSuchAlgorithmException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginMethod", targetNamespace = "http://myservice/", className = "client2.LoginMethod")
    @ResponseWrapper(localName = "loginMethodResponse", targetNamespace = "http://myservice/", className = "client2.LoginMethodResponse")
    @Action(input = "http://myservice/MyService/loginMethodRequest", output = "http://myservice/MyService/loginMethodResponse", fault = {
        @FaultAction(className = NoSuchAlgorithmException_Exception.class, value = "http://myservice/MyService/loginMethod/Fault/NoSuchAlgorithmException")
    })
    public String loginMethod(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws NoSuchAlgorithmException_Exception
    ;

    /**
     * 
     * @param travelInfo
     * @param sessionID
     * @return
     *     returns client2.QuotationResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTravelQuotation", targetNamespace = "http://myservice/", className = "client2.GetTravelQuotation")
    @ResponseWrapper(localName = "getTravelQuotationResponse", targetNamespace = "http://myservice/", className = "client2.GetTravelQuotationResponse")
    @Action(input = "http://myservice/MyService/getTravelQuotationRequest", output = "http://myservice/MyService/getTravelQuotationResponse")
    public QuotationResponse getTravelQuotation(
        @WebParam(name = "travelInfo", targetNamespace = "")
        TravelInfo travelInfo,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

    /**
     * 
     * @param insured
     * @param cascoInfo
     * @param sessionID
     * @return
     *     returns client2.BookResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookCascoPolicy", targetNamespace = "http://myservice/", className = "client2.BookCascoPolicy")
    @ResponseWrapper(localName = "bookCascoPolicyResponse", targetNamespace = "http://myservice/", className = "client2.BookCascoPolicyResponse")
    @Action(input = "http://myservice/MyService/bookCascoPolicyRequest", output = "http://myservice/MyService/bookCascoPolicyResponse")
    public BookResponse bookCascoPolicy(
        @WebParam(name = "CascoInfo", targetNamespace = "")
        CascoInfo cascoInfo,
        @WebParam(name = "Insured", targetNamespace = "")
        InsuredInfo insured,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

    /**
     * 
     * @param cascoInfo
     * @param sessionID
     * @return
     *     returns client2.QuotationResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCascoQuotation", targetNamespace = "http://myservice/", className = "client2.GetCascoQuotation")
    @ResponseWrapper(localName = "getCascoQuotationResponse", targetNamespace = "http://myservice/", className = "client2.GetCascoQuotationResponse")
    @Action(input = "http://myservice/MyService/getCascoQuotationRequest", output = "http://myservice/MyService/getCascoQuotationResponse")
    public QuotationResponse getCascoQuotation(
        @WebParam(name = "CascoInfo", targetNamespace = "")
        CascoInfo cascoInfo,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

    /**
     * 
     * @param aoInfo
     * @param sessionID
     * @param ssn
     * @return
     *     returns client2.QuotationResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAOQuotation", targetNamespace = "http://myservice/", className = "client2.GetAOQuotation")
    @ResponseWrapper(localName = "getAOQuotationResponse", targetNamespace = "http://myservice/", className = "client2.GetAOQuotationResponse")
    @Action(input = "http://myservice/MyService/getAOQuotationRequest", output = "http://myservice/MyService/getAOQuotationResponse")
    public QuotationResponse getAOQuotation(
        @WebParam(name = "AOInfo", targetNamespace = "")
        AoInfo aoInfo,
        @WebParam(name = "ssn", targetNamespace = "")
        String ssn,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

    /**
     * 
     * @param insured
     * @param bookTravelInfo
     * @param sessionID
     * @return
     *     returns client2.BookResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookTravelPolicy", targetNamespace = "http://myservice/", className = "client2.BookTravelPolicy")
    @ResponseWrapper(localName = "bookTravelPolicyResponse", targetNamespace = "http://myservice/", className = "client2.BookTravelPolicyResponse")
    @Action(input = "http://myservice/MyService/bookTravelPolicyRequest", output = "http://myservice/MyService/bookTravelPolicyResponse")
    public BookResponse bookTravelPolicy(
        @WebParam(name = "BookTravelInfo", targetNamespace = "")
        TravelInfo bookTravelInfo,
        @WebParam(name = "Insured", targetNamespace = "")
        InsuredInfo insured,
        @WebParam(name = "sessionID", targetNamespace = "")
        String sessionID);

}
